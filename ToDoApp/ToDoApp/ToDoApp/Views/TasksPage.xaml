<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
             xmlns:fragments="clr-namespace:ToDoApp.Views.Fragments"
             xmlns:model="clr-namespace:ToDoApp.Models"
             NavigationPage.HasNavigationBar="False"
             x:Class="ToDoApp.Views.TasksPage">
    <ContentPage.Content>
        <Grid 
            BackgroundColor="{AppThemeBinding Light={StaticResource LightPageBackgroundColor}, Dark={StaticResource DarkPageBackgroundColor}}"
            RowDefinitions="Auto, Auto, Auto, Auto, Auto, *"
            xct:StateLayout.CurrentState="{Binding MainState}">
            <xct:StateLayout.StateViews>
                <xct:StateView 
                    StateKey="Loading"
                    VerticalOptions="FillAndExpand">
                    <fragments:LoadingView></fragments:LoadingView>
                </xct:StateView>
                <xct:StateView 
                    StateKey="Error"
                    VerticalOptions="FillAndExpand">
                    <fragments:ErrorView></fragments:ErrorView>
                </xct:StateView>
            </xct:StateLayout.StateViews>
            <fragments:ConnectionView
                Grid.Row="0"/>
            <Grid
                Grid.Row="1"
                ColumnDefinitions="Auto, *, Auto"
                RowDefinitions="Auto, Auto"
                RowSpacing="0"
                Margin="10, 10, 10, 0">
                <Label
                    Grid.Column="0"
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Text="&#xf2bd;"
                    TextColor="{AppThemeBinding Light={StaticResource LightButtonColor}, Dark={StaticResource DarkButtonColor}}"
                    FontSize="{StaticResource Headline2FontSize}"
                    FontFamily="FontAwesome_Solid"
                    VerticalOptions="Center"
                    HorizontalOptions="Center"
                    Margin="5, 0, 5, 0">
                    <Label.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding ProfileCommand}"></TapGestureRecognizer>
                    </Label.GestureRecognizers>
                </Label>
                <Label
                    Grid.Column="1"
                    Grid.Row="0"
                    Style="{StaticResource Body1_MulishBold}"
                    Text="Hello"
                    TextColor="{AppThemeBinding Light={StaticResource LightSecondaryTextColor}, Dark={StaticResource DarkSecondaryTextColor}}"></Label>
                <Label
                    Grid.Column="1"
                    Grid.Row="1"
                    Margin="0, -2, 0, 0"
                    Style="{StaticResource Subtitle1_MulishBlack}"
                    Text="{Binding Name}"
                    TextColor="{AppThemeBinding Light={StaticResource LightPrimaryTextColor}, Dark={StaticResource DarkPrimaryTextColor}}"></Label>
                <Label
                    Grid.Column="2"
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Text="&#xf142;"
                    TextColor="{AppThemeBinding Light={StaticResource LightButtonColor}, Dark={StaticResource DarkButtonColor}}"
                    FontSize="{StaticResource Headline4FontSize}"
                    FontFamily="FontAwesome_Solid"
                    VerticalOptions="Center"
                    Margin="0, 0, 10, 0">
                    <Label.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding MoreCommand}"></TapGestureRecognizer>
                    </Label.GestureRecognizers>
                </Label>
            </Grid>
            <Grid
                Grid.Row="2"
                Margin="15, 0"
                HeightRequest="35"
                ColumnDefinitions="Auto, *, 35, 35">
                <Label
                    Grid.Column="0"
                    Text="{Binding Week.WeekString}"
                    TextColor="{AppThemeBinding Light={StaticResource LightPrimaryTextColor}, Dark={StaticResource DarkPrimaryTextColor}}"
                    Style="{StaticResource Subtitle1_MulishBlack}"
                    VerticalOptions="Center"></Label>
                <Button
                    Grid.Column="2"
                    CornerRadius="15"
                    Text="&#xf053;"
                    TextColor="{AppThemeBinding Light={StaticResource LightButtonTextColor}, Dark={StaticResource DarkButtonTextColor}}"
                    FontSize="{StaticResource Body2FontSize}"
                    FontFamily="FontAwesome_Solid"
                    BackgroundColor="{AppThemeBinding Light={StaticResource LightButtonColor}, Dark={StaticResource DarkButtonColor}}"
                    Command="{Binding PreviousWeekCommand}"
                    CommandParameter="{Binding Week.StartDay}"></Button>
                <Button
                    Grid.Column="3"
                    CornerRadius="15"
                    Text="&#xf054;"
                    TextColor="{AppThemeBinding Light={StaticResource LightButtonTextColor}, Dark={StaticResource DarkButtonTextColor}}"
                    FontSize="{StaticResource Body2FontSize}"
                    FontFamily="FontAwesome_Solid"
                    BackgroundColor="{AppThemeBinding Light={StaticResource LightButtonColor}, Dark={StaticResource DarkButtonColor}}"
                    Command="{Binding NextWeekCommand}"
                    CommandParameter="{Binding Week.LastDay}"></Button>
            </Grid>
            <Grid
                x:Name="daysList"
                Grid.Row="3"
                ColumnDefinitions="*, *, *, *, *, *"
                BindableLayout.ItemsSource="{Binding DaysList}"
                Margin="15, 0">
                <BindableLayout.ItemTemplate>
                    <DataTemplate>
                        <Frame
                            Grid.Column="{Binding Column}"
                            Padding="4, 8, 4, 8"
                            CornerRadius="16"
                            xct:TouchEffect.NativeAnimation="True">
                            <Frame.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding BindingContext.DayCommand, Source={x:Reference daysList}}" CommandParameter="{Binding .}"></TapGestureRecognizer>
                            </Frame.GestureRecognizers>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup>
                                    <VisualState x:Name="normal">
                                        <VisualState.StateTriggers>
                                            <StateTrigger IsActive="{Binding State, Converter={xct:EqualConverter}, ConverterParameter={x:Static model:DayStateEnum.Normal}}"></StateTrigger>
                                        </VisualState.StateTriggers>
                                        <VisualState.Setters>
                                            <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource LightCardBackgroundColor}, Dark={StaticResource DarkCardBackgroundColor}}"/>
                                            <Setter Property="HasShadow" Value="True"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="active">
                                        <VisualState.StateTriggers>
                                            <StateTrigger IsActive="{Binding State, Converter={xct:EqualConverter}, ConverterParameter={x:Static model:DayStateEnum.Active}}"></StateTrigger>
                                        </VisualState.StateTriggers>
                                        <VisualState.Setters>
                                            <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource LightButtonColor}, Dark={StaticResource DarkButtonColor}}"/>
                                            <Setter Property="HasShadow" Value="True"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="past">
                                        <VisualState.StateTriggers>
                                            <StateTrigger IsActive="{Binding State, Converter={xct:EqualConverter}, ConverterParameter={x:Static model:DayStateEnum.Past}}"></StateTrigger>
                                        </VisualState.StateTriggers>
                                        <VisualState.Setters>
                                            <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource LightCardDisabledBackgroundColor}, Dark={StaticResource DarkCardDisabledBackgroundColor}}"/>
                                            <Setter Property="HasShadow" Value="False"/>
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <StackLayout
                                Spacing="0">
                                <Label
                                    Text="{Binding DayName}"
                                    TextTransform="Uppercase"
                                    Style="{StaticResource Body1_MulishRegular}"
                                    HorizontalTextAlignment="Center">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup>
                                            <VisualState x:Name="normal">
                                                <VisualState.StateTriggers>
                                                    <StateTrigger IsActive="{Binding State, Converter={xct:EqualConverter}, ConverterParameter={x:Static model:DayStateEnum.Normal}}"></StateTrigger>
                                                </VisualState.StateTriggers>
                                                <VisualState.Setters>
                                                    <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource LightSecondaryTextColor}, Dark={StaticResource DarkSecondaryTextColor}}"/>
                                                </VisualState.Setters>
                                            </VisualState>
                                            <VisualState x:Name="active">
                                                <VisualState.StateTriggers>
                                                    <StateTrigger IsActive="{Binding State, Converter={xct:EqualConverter}, ConverterParameter={x:Static model:DayStateEnum.Active}}"></StateTrigger>
                                                </VisualState.StateTriggers>
                                                <VisualState.Setters>
                                                    <Setter Property="FontFamily" Value="Mulish_Bold"/>
                                                    <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource LightButtonTextColor}, Dark={StaticResource DarkButtonTextColor}}"/>
                                                </VisualState.Setters>
                                            </VisualState>
                                            <VisualState x:Name="past">
                                                <VisualState.StateTriggers>
                                                    <StateTrigger IsActive="{Binding State, Converter={xct:EqualConverter}, ConverterParameter={x:Static model:DayStateEnum.Past}}"></StateTrigger>
                                                </VisualState.StateTriggers>
                                                <VisualState.Setters>
                                                    <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource LightDisabledTextColor}, Dark={StaticResource DarkDisabledTextColor}}"/>
                                                </VisualState.Setters>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                </Label>
                                <Label
                                    HorizontalTextAlignment="Center"
                                    Style="{StaticResource Subtitle1_MulishBlack}"
                                    Text="{Binding Day}">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup>
                                            <VisualState x:Name="normal">
                                                <VisualState.StateTriggers>
                                                    <StateTrigger IsActive="{Binding State, Converter={xct:EqualConverter}, ConverterParameter={x:Static model:DayStateEnum.Normal}}"></StateTrigger>
                                                </VisualState.StateTriggers>
                                                <VisualState.Setters>
                                                    <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource LightPrimaryTextColor}, Dark={StaticResource DarkPrimaryTextColor}}"/>
                                                </VisualState.Setters>
                                            </VisualState>
                                            <VisualState x:Name="active">
                                                <VisualState.StateTriggers>
                                                    <StateTrigger IsActive="{Binding State, Converter={xct:EqualConverter}, ConverterParameter={x:Static model:DayStateEnum.Active}}"></StateTrigger>
                                                </VisualState.StateTriggers>
                                                <VisualState.Setters>
                                                    <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource LightButtonTextColor}, Dark={StaticResource DarkButtonTextColor}}"/>
                                                </VisualState.Setters>
                                            </VisualState>
                                            <VisualState x:Name="past">
                                                <VisualState.StateTriggers>
                                                    <StateTrigger IsActive="{Binding State, Converter={xct:EqualConverter}, ConverterParameter={x:Static model:DayStateEnum.Past}}"></StateTrigger>
                                                </VisualState.StateTriggers>
                                                <VisualState.Setters>
                                                    <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource LightDisabledTextColor}, Dark={StaticResource DarkDisabledTextColor}}"/>
                                                </VisualState.Setters>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                </Label>
                            </StackLayout>
                        </Frame>
                    </DataTemplate>
                </BindableLayout.ItemTemplate>
            </Grid>
            <StackLayout
                Grid.Row="4"
                Orientation="Horizontal"
                HorizontalOptions="FillAndExpand"
                Margin="15, 5, 15, 0">
                <Label
                    Style="{StaticResource Subtitle1_MulishBlack}"
                    Text="Tasks"
                    TextColor="{AppThemeBinding Light={StaticResource LightPrimaryTextColor}, Dark={StaticResource DarkPrimaryTextColor}}"></Label>
                <Label
                    Text="{Binding Filter}"
                    TextColor="{AppThemeBinding Light={StaticResource LightPrimaryTextColor}, Dark={StaticResource DarkPrimaryTextColor}}"
                    Style="{StaticResource Body1_MulishRegular}"
                    HorizontalOptions="EndAndExpand"
                    VerticalOptions="End"></Label>
            </StackLayout>
            <StackLayout
                Grid.Row="5"
                xct:StateLayout.CurrentState="{Binding TaskListState}"
                Padding="5, 0">
                <xct:StateLayout.StateViews>
                    <xct:StateView 
                        StateKey="Loading"
                        VerticalOptions="FillAndExpand">
                        <fragments:LoadingView></fragments:LoadingView>
                    </xct:StateView>
                    <xct:StateView 
                        StateKey="Empty"
                        VerticalOptions="FillAndExpand">
                        <fragments:ZeroStateView></fragments:ZeroStateView>
                    </xct:StateView>
                </xct:StateLayout.StateViews>
                <CollectionView
                    x:Name="TaskItems"
                    ItemsSource="{Binding TaskList}">
                    <CollectionView.ItemTemplate>
                        <DataTemplate>
                            <StackLayout>
                                <StackLayout.GestureRecognizers>
                                    <DropGestureRecognizer
                                        AllowDrop="True"
                                        DragLeaveCommand="{Binding BindingContext.ItemDragLeave, Source={x:Reference TaskItems}}"
                                        DragLeaveCommandParameter="{Binding}"
                                        DragOverCommand="{Binding BindingContext.ItemDraggedOver, Source={x:Reference TaskItems}}"
                                        DragOverCommandParameter="{Binding}"
                                        Drop="DropGestureRecognizer_Drop_Collection"
                                        DropCommand="{Binding BindingContext.ItemDropped, Source={x:Reference TaskItems}}"
                                        DropCommandParameter="{Binding}" />
                                </StackLayout.GestureRecognizers>
                                <Grid
                                    BackgroundColor="{AppThemeBinding Light={StaticResource LightButtonColor}, Dark={StaticResource DarkButtonColor}}"
                                    HeightRequest="2"
                                    Margin="0, 5, 0, 0"
                                    IsVisible="{Binding isBeingDraggedOver}" />
                                <SwipeView
                                    IsEnabled="{Binding Archived, Converter={xct:InvertedBoolConverter}}"
                                    BackgroundColor="{AppThemeBinding Light={StaticResource LightPageBackgroundColor}, Dark={StaticResource DarkPageBackgroundColor}}">
                                    <SwipeView.RightItems>
                                        <SwipeItems>
                                            <SwipeItemView
                                                Command="{Binding BindingContext.DeleteTaskCommand, Source={x:Reference TaskItems}}"
                                                CommandParameter="{Binding}">
                                                <Frame
                                                    BackgroundColor="Transparent"
                                                    Padding="15, 0">
                                                    <Label
                                                        Text="&#xf2ed;"
                                                        TextColor="{AppThemeBinding Light={StaticResource LightPrimaryTextColor}, Dark={StaticResource DarkPrimaryTextColor}}"
                                                        FontSize="{StaticResource Headline4FontSize}"
                                                        FontFamily="FontAwesome_Solid"
                                                        VerticalTextAlignment="Center">
                                                    </Label>
                                                </Frame>
                                            </SwipeItemView>
                                            <SwipeItemView 
                                                Command="{Binding BindingContext.EditTaskCommand, Source={x:Reference TaskItems}}"
                                                CommandParameter="{Binding}">
                                                <Frame
                                                    BackgroundColor="Transparent"
                                                    Padding="25, 0, 15, 0">
                                                    <Label
                                                        Text="&#xf303;"
                                                        TextColor="{AppThemeBinding Light={StaticResource LightPrimaryTextColor}, Dark={StaticResource DarkPrimaryTextColor}}"
                                                        FontSize="{StaticResource Headline4FontSize}"
                                                        FontFamily="FontAwesome_Solid"
                                                        VerticalTextAlignment="Center">
                                                    </Label>
                                                </Frame>
                                            </SwipeItemView>
                                        </SwipeItems>
                                    </SwipeView.RightItems>
                                    <Frame
                                        Padding="10"
                                        Margin="10, 5"
                                        CornerRadius="20">
                                        <Frame.GestureRecognizers>
                                            <DragGestureRecognizer
                                                CanDrag="True"
                                                DragStarting="DragGestureRecognizer_DragStarting_Collection"
                                                DragStartingCommand="{Binding BindingContext.ItemDragged, Source={x:Reference TaskItems}}"
                                                DragStartingCommandParameter="{Binding}" />
                                            <TapGestureRecognizer Command="{Binding BindingContext.CheckTaskCommand, Source={x:Reference TaskItems}}" CommandParameter="{Binding}"></TapGestureRecognizer>
                                        </Frame.GestureRecognizers>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup>
                                                <VisualState x:Name="normal">
                                                    <VisualState.StateTriggers>
                                                        <StateTrigger IsActive="{Binding Archived, Converter={xct:InvertedBoolConverter}}"></StateTrigger>
                                                    </VisualState.StateTriggers>
                                                    <VisualState.Setters>
                                                        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource LightCardBackgroundColor}, Dark={StaticResource DarkCardBackgroundColor}}"/>
                                                        <Setter Property="HasShadow" Value="True"/>
                                                        <Setter Property="BorderColor" Value="{AppThemeBinding Light={StaticResource LightCardBackgroundColor}, Dark={StaticResource DarkCardBackgroundColor}}"/>
                                                    </VisualState.Setters>
                                                </VisualState>
                                                <VisualState x:Name="done">
                                                    <VisualState.StateTriggers>
                                                        <StateTrigger IsActive="{Binding Archived}"></StateTrigger>
                                                    </VisualState.StateTriggers>
                                                    <VisualState.Setters>
                                                        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource LightCardDoneBackgroundColor}, Dark={StaticResource DarkCardDoneBackgroundColor}}"/>
                                                        <Setter Property="HasShadow" Value="False"/>
                                                        <Setter Property="BorderColor" Value="{AppThemeBinding Light={StaticResource LightCardBorderColor}, Dark={StaticResource DarkCardBorderColor}}"/>
                                                    </VisualState.Setters>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Grid
                                            ColumnDefinitions="Auto, Auto"
                                            RowDefinitions="Auto, 30"
                                            RowSpacing="0">
                                            <Label
                                                Grid.Row="0"
                                                Grid.Column="0"
                                                Grid.RowSpan="2"
                                                Text="{Binding Archived, Converter={StaticResource DoneIconConverter}}"
                                                FontSize="25"
                                                HorizontalOptions="Start"
                                                VerticalOptions="Center"
                                                Margin="10, 0, 0, 0">
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup>
                                                        <VisualState x:Name="normal">
                                                            <VisualState.StateTriggers>
                                                                <StateTrigger IsActive="{Binding Archived, Converter={xct:InvertedBoolConverter}}"></StateTrigger>
                                                            </VisualState.StateTriggers>
                                                            <VisualState.Setters>
                                                                <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource LightPrimaryTextColor}, Dark={StaticResource DarkPrimaryTextColor}}"/>
                                                                <Setter Property="FontFamily" Value="FontAwesome_Regular"/>
                                                            </VisualState.Setters>
                                                        </VisualState>
                                                        <VisualState x:Name="done">
                                                            <VisualState.StateTriggers>
                                                                <StateTrigger IsActive="{Binding Archived}"></StateTrigger>
                                                            </VisualState.StateTriggers>
                                                            <VisualState.Setters>
                                                                <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource LightDisabledTextColor}, Dark={StaticResource DarkSecondaryTextColor}}"/>
                                                                <Setter Property="FontFamily" Value="FontAwesome_Solid"/>
                                                            </VisualState.Setters>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                            </Label>
                                            <Label 
                                                Grid.Row="0"
                                                Grid.Column="1"
                                                Text="{Binding Task}"
                                                FontFamily="Mulish_ExtraBold"
                                                FontSize="{StaticResource Body2FontSize}"
                                                Margin="10, 0"
                                                VerticalOptions="Center">
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup>
                                                        <VisualState x:Name="normal">
                                                            <VisualState.StateTriggers>
                                                                <StateTrigger IsActive="{Binding Archived, Converter={xct:InvertedBoolConverter}}"></StateTrigger>
                                                            </VisualState.StateTriggers>
                                                            <VisualState.Setters>
                                                                <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource LightPrimaryTextColor}, Dark={StaticResource DarkPrimaryTextColor}}"/>
                                                            </VisualState.Setters>
                                                        </VisualState>
                                                        <VisualState x:Name="done">
                                                            <VisualState.StateTriggers>
                                                                <StateTrigger IsActive="{Binding Archived}"></StateTrigger>
                                                            </VisualState.StateTriggers>
                                                            <VisualState.Setters>
                                                                <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource LightDisabledTextColor}, Dark={StaticResource DarkSecondaryTextColor}}"/>
                                                            </VisualState.Setters>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                            </Label>
                                            <StackLayout
                                                Grid.Row="1"
                                                Grid.Column="1"
                                                Orientation="Horizontal"
                                                Margin="10, 5">
                                                <BoxView
                                                    Color="{Binding ListObj.Color}"
                                                    CornerRadius="10"
                                                    WidthRequest="10"
                                                    HeightRequest="10"
                                                    VerticalOptions="Center"
                                                    HorizontalOptions="Center"></BoxView>
                                                <Label 
                                                    Text="{Binding ListObj.Name}"
                                                    FontFamily="Mulish_Regular"
                                                    FontSize="{StaticResource Body1FontSize}"
                                                    VerticalOptions="CenterAndExpand">
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup>
                                                            <VisualState x:Name="normal">
                                                                <VisualState.StateTriggers>
                                                                    <StateTrigger IsActive="{Binding Archived, Converter={xct:InvertedBoolConverter}}"></StateTrigger>
                                                                </VisualState.StateTriggers>
                                                                <VisualState.Setters>
                                                                    <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource LightPrimaryTextColor}, Dark={StaticResource DarkPrimaryTextColor}}"/>
                                                                </VisualState.Setters>
                                                            </VisualState>
                                                            <VisualState x:Name="done">
                                                                <VisualState.StateTriggers>
                                                                    <StateTrigger IsActive="{Binding Archived}"></StateTrigger>
                                                                </VisualState.StateTriggers>
                                                                <VisualState.Setters>
                                                                    <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource LightDisabledTextColor}, Dark={StaticResource DarkSecondaryTextColor}}"/>
                                                                </VisualState.Setters>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                </Label>
                                            </StackLayout>
                                        </Grid>
                                    </Frame>
                                </SwipeView>
                            </StackLayout>
                        </DataTemplate>
                    </CollectionView.ItemTemplate>
                </CollectionView>
            </StackLayout>
            <Frame 
                Grid.Row="5" 
                BackgroundColor="{AppThemeBinding Light={StaticResource LightButtonColor}, Dark={StaticResource DarkButtonColor}}"
                VerticalOptions="End" 
                HorizontalOptions="End" 
                CornerRadius="20" 
                TranslationY="-20" 
                TranslationX="-20"
                Padding="20"
                xct:TouchEffect.NativeAnimation="True">
                <Frame.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding AddCommand}"></TapGestureRecognizer>
                </Frame.GestureRecognizers>
                <Label
                    Text="&#xf067;"
                    FontSize="{StaticResource Headline3FontSize}"
                    FontFamily="FontAwesome_Solid"
                    TextColor="{AppThemeBinding Light={StaticResource LightButtonTextColor}, Dark={StaticResource DarkButtonTextColor}}"
                    HorizontalOptions="Center"
                    VerticalOptions="Center"></Label>
            </Frame>
        </Grid>
    </ContentPage.Content>
</ContentPage>